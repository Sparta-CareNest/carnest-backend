pipeline {
    agent any

    environment {
        DOCKER = 'docker'
        SERVICE_DIR = 'eureka-service'
    }

    stages {
        stage('Check Changed Files') {
            steps {
                script {
                    def changedFiles = getChangedFiles()
                    def isChanged = changedFiles.any { it.startsWith("${SERVICE_DIR}/") }

                    if (!isChanged) {
                        echo "❌ No changes in ${SERVICE_DIR}. Skipping build."
                        currentBuild.result = 'NOT_BUILT'
                        return
                    } else {
                        echo "✅ Detected changes in ${SERVICE_DIR}. Continuing build."
                    }
                }
            }
        }

        stage('Clone Repository') {
            steps {
                checkout scm
                echo '✅ SCM 클론 성공'
            }
        }

        stage('Build image') {
            steps {
                dir("${SERVICE_DIR}") {
                    sh '''
                        ls -al
                        chmod +x ./gradlew
                        ./gradlew clean build
                        ${DOCKER} build -t jongmin627/eureka-service .
                    '''
                }
                echo '✅ Build Docker Image 성공'
            }
        }

        stage('Remove Previous container') {
            steps {
                script {
                    sh """
                        ${DOCKER} stop eureka-service || true
                        ${DOCKER} rm eureka-service || true
                    """
                }
                echo '🧹 이전 컨테이너 제거 완료 (없는 경우 무시)'
            }
        }

        stage('Create Docker Network if not exists') {
            steps {
                script {
                    sh """
                        if [ -z "\$(docker network ls --filter name=^msa-net\$ --format='{{ .Name }}')" ]; then
                          echo "Creating msa-net network..."
                          docker network create msa-net
                        else
                          echo "Docker network msa-net already exists"
                        fi
                    """
                }
            }
        }

        stage('Run New container') {
            steps {
                sh """
                    ${DOCKER} run --name eureka-service \
                     --network msa-net \
                     -d -p 8761:8761 jongmin627/eureka-service
                """
                echo '🚀 새로운 Eureka-Service 컨테이너 실행 성공'
            }
        }
    }
}

def getChangedFiles() {
    return sh(
        script: 'git fetch origin feature/cicd && git diff --name-only origin/feature/cicd...HEAD',
        returnStdout: true
    ).trim().split('\n')
}