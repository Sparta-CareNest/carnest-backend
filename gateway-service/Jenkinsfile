pipeline {
    agent any

    environment {
        DOCKER = 'docker'
    }

    stages {
        stage('Clone Repository') {
            steps {
                checkout scm
                echo '‚úÖ SCM ÌÅ¥Î°† ÏÑ±Í≥µ'
            }
        }

        stage('Build gateway-service image') {
            steps {
                dir('gateway-service') {
                    sh '''
                        ls -al
                        chmod +x ./gradlew
                        ./gradlew clean build
                        ${DOCKER} build -t jongmin627/eureka-service .
                    '''
                }
                echo '‚úÖ gateway-service Docker Image ÎπåÎìú ÏÑ±Í≥µ'
            }
        }

        stage('Remove Previous gateway-service container') {
            steps {
                sh """
                    ${DOCKER} stop gateway-service || true
                    ${DOCKER} rm gateway-service || true
                """
                echo 'üßπ Ïù¥Ï†Ñ gateway-service Ïª®ÌÖåÏù¥ÎÑà Ï†úÍ±∞ ÏôÑÎ£å'
            }
        }

        stage('Create Docker Network if not exists') {
                    steps {
                        script {
                            sh """
                                if [ -z "\$(docker network ls --filter name=^msa-net\$ --format='{{ .Name }}')" ]; then
                                  echo "Creating msa-net network..."
                                  docker network create msa-net
                                else
                                  echo "Docker network msa-net already exists"
                                fi
                            """
                        }
                    }
                }
        }

        stage('Run New container') {
                steps {
                    sh """
                        ${DOCKER} run --name gateway-service \
                         --network msa-net \
                         -d -p 8000:8000 jongmin627/gateway-service
                    """
                    echo 'ÏÉàÎ°úÏö¥ Gateway-Service Ïª®ÌÖåÏù¥ÎÑà Ïã§Ìñâ ÏÑ±Í≥µ'
                }
        }
    }
}